name: X86-OpenWrt

on:
#  push:
#    branches: 
#      - master
  schedule:
    - cron: 10 13 1 * *
  watch:
    types: started

jobs:
  
  Cleanup-Old-Releases:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:  
    - name: Delete Older Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Cleanup-Old-Artifacts:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
    - name: Cleanup Old Action Artifacts
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ github.token }}
        expire-in: 7d
        
  Cleanup-Workflow-Logs:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Cleanup Workflow Logs
        uses: ActionsRML/delete-workflow-runs@v1.2.1
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 7
          
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a
    - name: Free disk space
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
        sudo -E apt-get clean -y
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
    - name: Prepare Openwrt
      run: |
        df -h
        sudo chown -R runner:runner /home/runner/work/X86-OpenWrt
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt
        cp -f ./scripts/01_prepare_openwrt.sh ./01_prepare_openwrt.sh
        mkdir openwrt
        cp -rf ./scripts/. ./openwrt/
        cp -rf ./seed/. ./openwrt/
        /bin/bash 01_prepare_openwrt.sh
    - name: Prepare Package
      run: |
        df -h
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        /bin/bash 02_prepare_package.sh
    - name: Convert Translation
      run: |
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        /bin/bash 03_convert_translation.sh
    - name: Remove Upx
      run: |
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Download
      run: |
        df -h
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        make defconfig
        make download -j10
    - name: Make Toolchain
      run: |
        df -h
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s
    - name: Compile Openwrt
      run: |
        df -h
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt
        let make_process=$(nproc)+1
        make -j${make_process} V=s || make -j1 V=s
    - name: Cleaning
      run: |
        df -h
        cd /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt/bin/targets/x86/64
        rm -rf `ls | grep -v ".gz"`
        rm -rf `ls | grep -v "combined-squashfs"`
    - name: Upload Firmwares
      uses: actions/upload-artifact@master
      with:
        name: X86
        path: /home/runner/work/X86-OpenWrt/X86-OpenWrt/openwrt/bin/targets/x86/64/
